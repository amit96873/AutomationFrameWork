<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[this is the Symple ScreenShot]]>
    </line>
    <line>
      <![CDATA[<a herf='C:\Users\Amit singh\git\AutomationFrameWork\SmartCoinAutomationFramework\Screenshots\Android 9.0 Android Emulator\null\KYCUploadDocumentsPageTests\checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe.png'><img src ='C:\Users\Amit singh\git\AutomationFrameWork\SmartCoinAutomationFramework\Screenshots\Android 9.0 Android Emulator\null\KYCUploadDocumentsPageTests\checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe.png' height='100' width='100'/></a> ]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="156599" started-at="2020-03-31T17:52:46 IST" finished-at="2020-03-31T17:55:23 IST">
    <groups>
    </groups>
    <test name="KYC Documents Page Tests" duration-ms="156599" started-at="2020-03-31T17:52:46 IST" finished-at="2020-03-31T17:55:23 IST">
      <class name="com.qa.tests.KYCUploadDocumentsPageTests">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="beforeTest" is-config="true" duration-ms="21096" started-at="2020-03-31T17:52:46 IST" finished-at="2020-03-31T17:53:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Android Emulator]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="beforeClass" is-config="true" duration-ms="520" started-at="2020-03-31T17:53:07 IST" finished-at="2020-03-31T17:53:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="beforeMethod" is-config="true" duration-ms="10" started-at="2020-03-31T17:53:08 IST" finished-at="2020-03-31T17:53:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.KYCUploadDocumentsPageTests.checkHomePageScrolling()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkHomePageScrolling()[pri:1, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="checkHomePageScrolling" duration-ms="36120" started-at="2020-03-31T17:53:08 IST" description="verify Enter Password Page and home page my_profile Button and On My profile page Expend Menu Button and Edit_Persional Details Button on menu page" finished-at="2020-03-31T17:53:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHomePageScrolling -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="afterMethod" is-config="true" duration-ms="2" started-at="2020-03-31T17:53:45 IST" finished-at="2020-03-31T17:53:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="beforeMethod" is-config="true" duration-ms="6" started-at="2020-03-31T17:53:45 IST" finished-at="2020-03-31T17:53:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.KYCUploadDocumentsPageTests.checkUploadAadharFrontAsIDAndAddharBackAsAddressProofe()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkUploadAadharFrontAsIDAndAddharBackAsAddressProofe()[pri:2, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="checkUploadAadharFrontAsIDAndAddharBackAsAddressProofe" duration-ms="62364" started-at="2020-03-31T17:53:45 IST" description="Verify Edit KYC Details Page by Uploading valid data and Scrolling and documents uploaded Aadhar front as ID proof and Aadhar back As Address Proof" finished-at="2020-03-31T17:54:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkUploadAadharFrontAsIDAndAddharBackAsAddressProofe -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="afterMethod" is-config="true" duration-ms="2" started-at="2020-03-31T17:54:48 IST" finished-at="2020-03-31T17:54:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-03-31T17:54:48 IST" finished-at="2020-03-31T17:54:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.KYCUploadDocumentsPageTests.checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe()[pri:3, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe" duration-ms="31236" started-at="2020-03-31T17:54:48 IST" description="Verify Edit KYC Details Page by Uploading valid data and Scrolling and documents uploaded Pan Card as ID proof and Utillity bills  As Address Proof" finished-at="2020-03-31T17:55:20 IST">
          <exception class="org.openqa.selenium.InvalidElementStateException">
            <message>
              <![CDATA[Swipe did not complete successfully
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LENOVO-PC', ip: '192.168.1.97', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_131'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.payvoo.app.ui.activity...., appPackage: in.rebase.app, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.payvoo.app.ui.activity...., appPackage: in.rebase.app, automationName: UiAutomator2, deviceName: Android Emulator, fullReset: false, noReset: true, platformName: android, platformVersion: 9.0}, deviceApiLevel: 28, deviceManufacturer: Google, deviceModel: AOSP on IA Emulator, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 9880476d-32c8-43b3-87e8-fbebe48b6d13]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: Swipe did not complete successfully
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LENOVO-PC', ip: '192.168.1.97', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_131'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.payvoo.app.ui.activity...., appPackage: in.rebase.app, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.payvoo.app.ui.activity...., appPackage: in.rebase.app, automationName: UiAutomator2, deviceName: Android Emulator, fullReset: false, noReset: true, platformName: android, platformVersion: 9.0}, deviceApiLevel: 28, deviceManufacturer: Google, deviceModel: AOSP on IA Emulator, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: emulator-5554, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1731, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 9880476d-32c8-43b3-87e8-fbebe48b6d13
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at io.appium.java_client.PerformsTouchActions.performTouchAction(PerformsTouchActions.java:41)
at io.appium.java_client.TouchAction.perform(TouchAction.java:187)
at com.qa.BaseTest.scrollUsingTouchAction(BaseTest.java:291)
at com.qa.BaseTest.scrollToElement(BaseTest.java:238)
at com.qa.pages.HomePageSmartCoin.scrollUp(HomePageSmartCoin.java:91)
at com.qa.tests.KYCUploadDocumentsPageTests.checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe(KYCUploadDocumentsPageTests.java:261)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidElementStateException -->
          <reporter-output>
            <line>
              <![CDATA[this is the Symple ScreenShot]]>
            </line>
            <line>
              <![CDATA[<a herf='C:\Users\Amit singh\git\AutomationFrameWork\SmartCoinAutomationFramework\Screenshots\Android 9.0 Android Emulator\null\KYCUploadDocumentsPageTests\checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe.png'><img src ='C:\Users\Amit singh\git\AutomationFrameWork\SmartCoinAutomationFramework\Screenshots\Android 9.0 Android Emulator\null\KYCUploadDocumentsPageTests\checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe.png' height='100' width='100'/></a> ]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkUploadPanCardAsIDAndUtillityBillsAsAddressProofe -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-03-31T17:55:21 IST" finished-at="2020-03-31T17:55:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-03-31T17:55:21 IST" finished-at="2020-03-31T17:55:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.qa.tests.KYCUploadDocumentsPageTests@108bdbd8]" name="afterTest" is-config="true" duration-ms="1371" started-at="2020-03-31T17:55:21 IST" finished-at="2020-03-31T17:55:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.KYCUploadDocumentsPageTests -->
    </test> <!-- KYC Documents Page Tests -->
  </suite> <!-- Suite -->
</testng-results>
